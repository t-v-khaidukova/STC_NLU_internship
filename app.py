# –ó–∞–ø—É—Å—Ç–∏—Ç—å –∫–æ–º–∞–Ω–¥—É:
#   streamlit run app.py

import streamlit as st
from tools import Inf2Irregular, GrammarHelper
from main import LLM_FC

api_key = st.text_input("üîê –í–≤–µ–¥–∏—Ç–µ API API-–∫–ª—é—á", type="password")
# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
st.set_page_config(page_title="GigaChat Tool Interface")

# –ó–∞–≥–æ–ª–æ–≤–æ–∫ –∏ –æ–ø–∏—Å–∞–Ω–∏–µ
st.title("üõ†Ô∏è GigaChat Tool Interface")
st.write("–í–≤–µ–¥–∏—Ç–µ –≤–æ–ø—Ä–æ—Å, –∏ —Å–∏—Å—Ç–µ–º–∞ –ø–æ–¥–±–µ—Ä—ë—Ç –Ω—É–∂–Ω—ã–π –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –∏ –ø–æ–∫–∞–∂–µ—Ç –≤—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏ –∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç.")

# –í–≤–æ–¥ –≤–æ–ø—Ä–æ—Å–∞
question = st.text_input("–í–∞—à –≤–æ–ø—Ä–æ—Å:")


max_num_fc = 5
# –ö–Ω–æ–ø–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
if st.button("–û—Ç–ø—Ä–∞–≤–∏—Ç—å"):
    if not question or not api_key:
        st.error("‚ùó –í–≤–µ–¥–∏—Ç–µ —Ç–µ–º—É –∏ API-–∫–ª—é—á.")
    else:
        main_llm = LLM_FC(api_key=api_key)
        with st.spinner("üß† –†–∞–±–æ—Ç–∞ GrammarTool..."):
            result = question
            for _ in range(max_num_fc):
                result = main_llm.run(result)
                if main_llm.has_fc(result):
                    func_name, args = main_llm.fc_prerun_desc(result)
                    result = main_llm.fc(result)
                    st.subheader("Function Call")
                    st.json({"name": func_name, "arguments": args})
                    st.subheader("Response")
                    st.write(result)
                else:
                    break
        # –í—ã–≤–æ–¥ –≤—ã–∑–æ–≤–∞ —Ñ—É–Ω–∫—Ü–∏–∏ –∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
        st.subheader("Response")
        st.write(result)

        # # –í—ã–±–æ—Ä –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞
        # if "irregular" in question.lower():
        #     infinitive = question.strip().split()[-1]
        #     func_name = "Inf2Irregular.do_map"
        #     args = {"infinitive": infinitive, "form": 2}
        #     result = Inf2Irregular().do_map(infinitive, 2)
        # else:
        #     noun = question.strip().rstrip('?')
        #     func_name = "GrammarHelper.explain_noun"
        #     args = {"noun": noun}
        #     result = GrammarHelper().explain_noun(noun)


